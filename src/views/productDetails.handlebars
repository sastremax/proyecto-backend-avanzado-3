<h1>{{product.title}}</h1>

<p><strong>Description:</strong> {{product.description}}</p>
<p><strong>Price:</strong> ${{product.price}}</p>
<p><strong>Category:</strong> {{product.category}}</p>
<p><strong>Stock:</strong> {{product.stock}}</p>

{{#if product.thumbnails.length}}
    {{#each product.thumbnails}}
        {{#if this}}
            <div class="image-container">
                <img src="{{this}}" alt="Product image" width="200">
            </div>
        {{/if}}
    {{/each}}
{{else}}
    <img src="/img/default-placeholder.webp" alt="No image available" width="200">
{{/if}}

<h2>Edit Product</h2>
<form action="/views/products/update/{{product._id}}" method="POST">
    <label for="title">Title:</label>
    <input type="text" name="title" id="title" value="{{product.title}}" required>

    <label for="price">Price:</label>
    <input type="number" name="price" id="price" value="{{product.price}}" required>

    <label for="stock">Stock:</label>
    <input type="number" name="stock" id="stock" value="{{product.stock}}" required>

    <label for="category">Category:</label>
    <input type="text" name="category" id="category" value="{{product.category}}" required>

    <button type="submit" class="styled-button">Update</button>
</form>

<h2>Delete Product</h2>
<form id="deleteProductForm">
    <button type="submit" class="styled-button">Delete Product</button>
</form>

<h2>Add to Cart</h2>
<form id="addToCartForm">
    <label for="quantity">Quantity:</label>
    <input type="number" name="quantity" id="quantity" value="1" min="1" max="{{product.stock}}" required>
    <button type="submit" class="styled-button">Add to Cart</button>
</form>

<h2>Remove from Cart</h2>
<form onsubmit="event.preventDefault(); removeFromCart('{{cartId}}', '{{product._id}}')">
    <button type="submit" class="styled-button">Remove from Cart</button>
</form>

<a href="/views/products/view" class="styled-button">Back to products</a>

<h2>Upload Product Image</h2>
<form action="/views/products/{{product._id}}/upload" method="POST" enctype="multipart/form-data">
    <input type="file" name="image" required>
    <button type="submit" class="styled-button">Upload Image</button>
</form>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    document.getElementById("addToCartForm").addEventListener("submit", async function (event) {
        event.preventDefault();

        const cartId = "{{cartId}}";
        const productId = "{{product._id}}";
        const quantity = document.getElementById("quantity").value;

        try {
            const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ quantity: parseInt(quantity) })
            });

            console.log("Response Status:", response.status);
            const responseData = await response.json();
            console.log("API Response:", responseData);

            if (response.ok) {
                Swal.fire({
                    title: "Success!",
                    text: responseData.message || "Product added to cart successfully!",
                    icon: "success",
                    confirmButtonText: "OK"
                }).then(() => {
                    window.location.href = `/views/cart/${cartId}`;
                });
            } else {
                console.error("Fetch Response Error:", responseData);
                Swal.fire({
                    title: "Error",
                    text: responseData.error || "Could not add product to cart.",
                    icon: "error",
                    confirmButtonText: "OK"
                });
            }
        } catch (error) {
            console.error("Fetch Error:", error);
            Swal.fire("Error", "Something went wrong.", "error");
        }
    });

    document.getElementById("deleteProductForm").addEventListener("submit", async function (event) {
        event.preventDefault();

        const productId = "{{product._id}}";

        Swal.fire({
            title: "Are you sure?",
            text: "This action cannot be undone!",
            icon: "warning",
            showCancelButton: true,
            confirmButtonColor: "#d33",
            cancelButtonColor: "#3085d6",
            confirmButtonText: "Yes, delete it!"
        }).then(async (result) => {
            if (result.isConfirmed) {
                try {
                    const response = await fetch(`/products/delete/${productId}`, {
                        method: "DELETE"
                    });

                    if (response.ok) {
                        Swal.fire({
                            title: "Deleted!",
                            text: "The product has been removed.",
                            icon: "success",
                            confirmButtonText: "OK"
                        }).then(() => {
                            window.location.href = "/views/products/view";
                        });
                    } else {
                        Swal.fire("Error", "Could not delete the product.", "error");
                    }
                } catch (error) {
                    Swal.fire("Error", "Something went wrong.", "error");
                }
            }
        });
    });

    const urlParams = new URLSearchParams(window.location.search);
    if (urlParams.has('success')) {
        let message = "Operation successful!";
        if (urlParams.get('success') === "1") {
            message = "Image uploaded successfully!";
        } else if (urlParams.get('success') === "2") {
            message = "Product updated successfully!";
        }

        Swal.fire({
            title: "Success!",
            text: message,
            icon: "success",
            confirmButtonText: "OK"
        }).then(() => {
            const newUrl = window.location.pathname;
            window.history.replaceState(null, "", newUrl);
        });
    }

    async function removeFromCart(cartId, productId) {
        try {
            const response = await fetch(`/cart/${cartId}/products/${productId}`, {
                method: "DELETE"
            });
            if (response.ok) {
                Swal.fire({
                    title: "Removed!",
                    text: "Product removed from cart!",
                    icon: "success",
                    confirmButtonText: "OK"
                }).then(() => {
                    window.location.reload();
                });
            } else {
                Swal.fire("Error", "Error removing product.", "error");
            }
        } catch (error) {
            console.error("Error:", error);
        }
    }
</script>

